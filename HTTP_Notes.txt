
HTTP (Hypertext Transfer Protocol):
    application level TCP/IP Protocol based on communication protocol used to deliver data
such as HTML files, image files, query results, etc. 
    Basic Features:
        > Connectionless - request are made from independent new connections and then disconnects afterwards, this is repeated.
        > Media independent - any type of data can be send as long as both client and server knows how to handle the data content.
        > Stateless - Neither client nor server can retain each other's information in between request and response.

HTTP/1.0 - uses new connection every request/response exchange
HTTP/1.1 - connection may be used one or more times

PARAMETERS
    HTTP Version: uses a (major).(minor) scheme to indicate versions of the protocol
        Example - HTTP/1.0 
    Uniform Resource Identifiers: formatted, case-sensitive string containing name location etc. to identify a resource
        General URI Syntax: "http:" "//" (host) (":" port) ( Absolute path ( "?" query))
        Example: http://abc.com/characters/?lvl=4
    Date/Time Formats: All HTTp date/time stamps MUST be represented in Greenwich Mean Time (GMT). 
        Any of these 3 representations are allowed:
            Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
            Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
            Sun Nov  6 08:49:37 1994       ; ANSI C's asctime() format
    Character Sets: used to specify the character sets that the clients prefers, multiple characters can be listed separated by commas.
        US-ASCII
        ISO-8859-1
        ISO-8859-7
    Content Encodings: indicates the encoding algorithm has been used to code the content before passing it over the network
        Accept-encoding: gzip
        Accept-encoding: compress
        Accept-encoding: deflate
    Media Types: used in Content-Type adn Accept header field in order to provide open and extensible dat typing and type negotiation
        image/gif
        audio/mpeg
        text/html   etc.
    Language Tags used within Accept-Language and Content-Language fields. can be composed of a main tag and several sub-tags
        en
        en-US
        en-cockney
        i-cherokee  etc.

HTTP Methods
    GET - Used to retrieve information from the given server using the given URI , Request GET to retrieve data
    HEAD - Same as GET, but transfer the status line and header section only
    POST - Request to send data to the server (ex: customer information/ file upload)
    PUT - Replace all current representation of the target resource with the uploaded content
    PATCH - Same as PUt but used when you want to apply a partial update to the resource
    DELETE - Removes all the current representation of the target resource given by a URI
    CONNECT - Establish a tunnel to the server identified by a given URI
    OPTION - Describes the communication options for the target resource
    TRACE - performs a message loop-back test along th path of the target source

HTTP Status Codes
    1xx: Informational - request has been received and the process is continuing
        100: Continue - Only a prt of the request has been received by the server. As long as it has not been rejected client should continue with the request
        101: Switching Protocols - the server switches Protocol
    2xx: Success - Action was successfully received understood, and accepted
        200: OK - The request is OK
        201: Created - The request is complete, and a new resource is created
        202: Accepted - The request is accepted for processing, but the processing is not complete
        203: Non-Authoritative Information - The information oin the entity header is from local/3rd part, not from original server
        204: No Content - A status code and a header are given in the response, but there is no entity-body in the reply
        205: Reset Content - The browser should clear the form used fot this transaction for additional input
        206: Partial Content - server return partial data from the size requested. 
    3xx: Redirection - I means further action must be taken in order to complete the request
        300: Multiple Choices - A link list, the User can select a link and go to that location, maximum 5 addresses
        301: Moved Permanently - The requested page is moved to a new URL
        302: Found the requested page has moved temporarily to a new URL
        303: See Other - The requested page can be found under a different URL
        304: Not Modified - Response code to an If-Modified-Since, Where the URL must be Accessed through the proxy mentioned in the Location header
        305: Use Proxy - The requested URL mist be accessed through the proxy mentioned in the location header
        306: Unused - This code was used in a previous version. It is no longer used, but the code is reversed
        307: Temporary Redirect The requested page has moved to a new URL
    4xx: Client Error - request contains incorrect syntax or cannot be fulfilled
        400: Bad Request - The server did not understand the request.
        401: Unauthorized - The requested page needs a username and a password.
        402: Payment Required - You can not use this code yet.
        403: Forbidden - Access is forbidden to the requested page.
        404: Not Found - The server can not find the requested page.
        405: Method Not Allowed - The method specified in the request is not allowed.
        406: Not Acceptable - The server can only generate a response that is not accepted by the client.
        407: Proxy Authentication Required - You must authenticate with a proxy server before this request can be served.
        408: Request Timeout - The request took longer than the server was prepared to wait.
        409: Conflict - The request could not be completed because of a conflict.
        410: Gone - The requested page is no longer available .
        411: Length Required - The "Content-Length" is not defined. The server will not accept the request without it .
        412: Precondition Failed - The pre condition given in the request evaluated to false by the server.
        413: Request Entity Too Large - The server will not accept the request, because the request entity is too large.
        414: Request-url Too Long - The server will not accept the request, because the url is too long. Occurs when you convert a "post" request to a "get" request with a long query information .
        415: Unsupported Media Type	The server will not accept the request, because the media-type is not supported .
        416: Requested Range Not Satisfiable - The requested byte range is not available and is out of bounds.
        417: Expectation Failed - The expectation given in an Expect request-header field could not be met by this server.
    5xx: Server Error - the Server failed to fulfill an apparently valid request
        500: Internal Server Error - The request was not completed. the serve met an unexpected condition
        501: Not Implemented - the request was not completed. The server did not support the functionality required
        502: Bad Gateway - The request was not completed. The server received an invalid response from the upstream server.
        503: Service Unavailable - The request was not completed. The server is temporarily overloading or down.
        504: Gateway Timeout - The gateway has timed out.
        505: HTTP Version Not Supported	- The server does not support the "http protocol" version.